import { createParamDecorator, ExecutionContext, ForbiddenException } from "@nestjs/common";
import { JwtPayloadWithRefreshToken } from "../types";

export const GetCurrentUser = createParamDecorator(
    (data: keyof JwtPayloadWithRefreshToken, context: ExecutionContext) => {
        const request = context.switchToHttp().getRequest();
        const user = request.user as JwtPayloadWithRefreshToken;

        console.log("üîπ Extracted User:", user);
        console.log("üîπ Cookies:", request.cookies);

        if (!user) {
            throw new ForbiddenException("‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
        }

        // –ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è refreshToken, –±–µ—Ä—ë–º –µ–≥–æ –∏–∑ cookie
        if (data === "refreshToken") {
            return request.cookies?.refresh_token;
        }

        return data ? user[data] : user;
    }
);
